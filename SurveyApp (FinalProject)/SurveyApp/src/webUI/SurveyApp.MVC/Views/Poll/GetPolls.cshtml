@model IEnumerable<PollDisplayResponse>

@foreach (var pollModel in Model)
{
    <div class="container">
        <h2>Poll Content: @pollModel.Content</h2>
        <br />
        <br />
        @foreach (var questionModel in pollModel.Questions)
        {
            <h3>Question @questionModel.Id</h3>

            @if (questionModel.QuestionTypes == QuestionType.SingleLine)
            {
                <div class="answer-container">
                    <textarea name="question-@questionModel.Id" asp-for="@questionModel.Content" rows="1" maxlength="100" class="single-line"></textarea>
                </div>
            }
            else if (questionModel.QuestionTypes == QuestionType.MultiLine)
            {
                <div class="answer-container">
                    <textarea name="question-@questionModel.Id" asp-for="@questionModel.Content" rows="2" maxlength="250" class="multi-line"></textarea>
                </div>
            }
            <br />
            <br />

            <p>Options:</p>
            <div class="options-container">
                @foreach (var optionModel in questionModel.Options)
                {
                    <div class="option-item">
                        @if (questionModel.VoteTypes == VoteType.SingleChoice)
                        {
                            <input type="radio" name="question-@questionModel.Id" value="@optionModel.Id">
                            <label>@optionModel.Content</label>
                        }
                        else if (questionModel.VoteTypes == VoteType.MultipleChoice)
                        {
                            <input type="checkbox" name="question-@questionModel.Id" value="@optionModel.Id">
                            <label>@optionModel.Content</label>
                        }
                        else if (questionModel.VoteTypes == VoteType.Rating)
                        {
                            <label for="rating-@questionModel.Id-@optionModel.Id">@optionModel.Content</label>
                            <input type="number" id="rating-@questionModel.Id-@optionModel.Id" name="question-@questionModel.Id" min="1" max="5">
                        }
                    </div>
                }
            </div>
            <br />
            <br />
        }
    </div>
}

<button onclick="submitVotes()">Anketi Kaydet</button>

<script>
    function submitVotes() {
        var selectedOptions = [];
        var questionElements = document.querySelectorAll('[name^="question-"]');
        questionElements.forEach(function (questionElement) {
            var questionId = questionElement.getAttribute('name').split('-')[1];
            var optionElements = document.querySelectorAll('[name="question-' + questionId + '"]:checked');
            var optionIds = [];
            optionElements.forEach(function (optionElement) {
                optionIds.push(optionElement.value);
            });
            var answer = questionElement.value;
            selectedOptions.push({ questionId: questionId, optionIds: optionIds, answer: answer });
        });

        // AJAX isteğiyle seçeneklerin sunucuya gönderilmesi ve işlenmesi
        var xhr = new XMLHttpRequest();
        xhr.open('POST', '/Home/SaveVotes', true);
        xhr.setRequestHeader('Content-Type', 'application/json');
        xhr.onload = function () {
            if (xhr.status === 200) {
                // Başarılı yanıtın işlenmesi
            } else {
                // Veriler kaydedilirken hata oluştuğunda yapılacak işlemler
            }
        };
        xhr.onerror = function () {
            // Hata durumunun işlenmesi
        };
        xhr.send(JSON.stringify(selectedOptions));
    }

</script>


<style>
    .container {
        padding: 20px;
        border: 1px solid #ccc;
        margin-bottom: 20px;
    }

    .question-container {
        margin-bottom: 10px;
    }

    .question-content {
        font-weight: bold;
    }

    .question-poll-id {
        color: #666;
    }

    .answer-container textarea {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
        resize: vertical;
    }

    .options-container {
        display: grid;
        grid-template-columns: 1fr;
        gap: 10px;
    }

    .option-item {
        display: flex;
        align-items: center;
        gap: 10px;
    }
</style>


